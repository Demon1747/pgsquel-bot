apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: BOT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "helm.fullname" . }}-secret
                key: tgbot-token
                optional: false
          volumeMounts:
            - name: pics
              mountPath: /pics
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: sidecar-webdav
          image: "ionelmc/webdav:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Authorization
                  value: "Basic {{ printf "%s:%s" "admin" (( .Values.secrets.davPassword )) | b64enc }}"
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Authorization
                  value: "Basic {{ printf "%s:%s" "admin" (( .Values.secrets.davPassword )) | b64enc }}"
          env:
          - name: UID
            value: "0"
          - name: WEBDAV_USERNAME
            value: admin
          - name: WEBDAV_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "helm.fullname" . }}-dav
                key: password
                optional: true
          volumeMounts:
            - name: pics
              mountPath: /media
              readOnly: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: pics
        persistentVolumeClaim:
          claimName: {{ include "helm.fullname" . }}-pics
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
